{"title":"WNBA Standings","markdown":{"yaml":{"title":"WNBA Standings","format":{"html":{"fig-width":10,"fig-height":6,"toc":false}}},"headingText":"can go back as far as 2018 with these teams","containsRefs":false,"markdown":"\n\n```{r}\n#| include: false\n\ngetSchedule <- function(year){\n    require(rvest)\n    sched <- html_table(read_html(paste0('https://www.basketball-reference.com/wnba/years/',year,'_games.html')))[[1]]\n    return(sched)\n}\ngetStandings <- function(year){\n    standings <- html_table(read_html(paste0('https://www.basketball-reference.com/wnba/years/',year,'_standings.html')))[[1]]\n    return(standings)\n}\n\nmakeWNBAstandingsGraph <- function(year, sched, standings){\n    # team colors from: https://teamcolorcodes.com/wnba-color-codes/\nteamdata <- read.csv(text = 'team,name,color1,color2\nATL,Atlanta Dream,#C8102E,#418FDE\nCHI,Chicago Sky,#418FDE,#FFCD00\nCON,Connecticut Sun,#A6192E,#041E42\nDAL,Dallas Wings,#0C2340,#C4D600\nIND,Indiana Fever,#041E42,#C8102E\nLV,Las Vegas Aces,#000000,#BA0C2F\nLA,Los Angeles Sparks,#702F8A,#FFC72C\nMIN,Minnesota Lynx,#0C2340,#236192\nNY,New York Liberty,#6ECEB2,#000000\nPHX,Phoenix Mercury,#201747,#CB6015\nSEA,Seattle Storm,#2C5234,#FBE122\nWSH,Washington Mystics,#0C2340,#C8102E')\n\nsched <- sched[,1:5]\n# date could be in two formats, with or without commas\nif(length(grep(',', sched$Date)) > 0){\n    sched$Date <- as.Date(sched$Date, format = \"%a, %b %d, %Y\")\n}else{\n    sched$Date <- as.Date(sched$Date, format = \"%a %b %d %Y\")\n}\nnames(sched) <- c('Date','Visitor','PTSvis','Home','PTShome')\n# remove playoffs\nif(any(sched$Visitor == 'Playoffs')){\n    sched <- sched[1:(which.max(sched$Visitor == 'Playoffs')-1), ]\n}\nsched$PTSvis <- as.numeric(sched$PTSvis)\nsched$PTShome <- as.numeric(sched$PTShome)\nteams <- unique(c(sched$Visitor, sched$Home))\n# check\nstopifnot(all(teams %in% teamdata$name))\nstopifnot(all(teamdata$name %in% teams))\n\n\n# QC stuff. missing values, ties\nif(any(!is.na(sched$PTShome) & (sched$PTShome==sched$PTSvis))){\n    stop('ties detected')\n}\n\ncurves <- lapply(teams, function(team){\n    away <- sched[which(sched$Visitor == team), ]\n    away$WL <- away$PTSvis > away$PTShome\n    home <- sched[which(sched$Home == team), ]\n    home$WL <- home$PTShome > home$PTSvis\n    curve <- rbind(away, home)\n    curve <- curve[order(curve$Date), ]\n    curve$margin <- cumsum(c(-1,1)[factor(curve$WL)])\n    \n    curve <- curve[, c('Date','margin')]\n    supp <- data.frame(Date = curve$Date-1,\n                       margin = c(0,curve$margin[-nrow(curve)]))\n    supp <- supp[!supp$Date %in% curve$Date, ]\n    curve <- rbind(supp,curve)\n    curve <- curve[order(curve$Date), ]\n    \n    return(curve[!is.na(curve$margin), ]) # only count played games\n})\nnames(curves) <- teams\n# make sure curves start the day before opening day and don't end before the current date\nopening <- min(do.call(rbind, curves)$Date)\ntoday <- max(do.call(rbind, curves)$Date)\nfor(i in seq_along(curves)){\n    curve <- curves[[i]]\n    if(! opening %in% curve$Date){\n        curve <- rbind(c(opening, 0), curve)\n    }\n    if(! today %in% curve$Date){\n        curve <- rbind(curve, c(today, curve$margin[nrow(curve)]))\n    }\n    curves[[i]] <- curve\n}\ncurves <- curves[order(sapply(curves, function(x){ x$margin[nrow(x)] }))]\nteamdata <- teamdata[match(names(curves), teamdata$name), ]\nteamdata$margin <- sapply(curves, function(x){ x$margin[nrow(x)] })\n# all(names(curves) == teamdata$name) # check\n\n\n# check against actual standings\nstandings$Team <- gsub('[*]','', standings$Team)\nfor(team in teams){\n    s.i <- which(standings$Team == team)\n    c.i <- which(names(curves) == team)\n    stopifnot(curves[[c.i]]$margin[nrow(curves[[c.i]])] == standings$W[s.i] - standings$L[s.i])\n}\n\n# build legend df with blank row to separate non/playoff teams\nlgnd <- teamdata[nrow(teamdata):1, ]\nlgnd <- merge(lgnd, standings, by.x = 'name', by.y = 'Team')\nlgnd <- lgnd[match(names(curves), lgnd$name), ]\nlgnd <- lgnd[nrow(lgnd):1, ]\nlgnd$nameRecord <- paste0(lgnd$name,' (',lgnd$W,'-',lgnd$L,')')\nlgnd <- rbind(lgnd[1:8,], NA, lgnd[9:nrow(lgnd), ])\n\n\nlayout(matrix(c(1,1,1,2), nrow=1))\npar(mar = c(5,4,4,0)+.1)\n\nplot(range(do.call(rbind, curves)$Date), range(sapply(curves,function(x){x$margin})), col = 'transparent',\n     xlab = '', ylab='', main = paste(year, 'WNBA Standings'), las = 1)\nrect(min(sched$Date)-9999,-9999,max(sched$Date)+9999,9999, col='grey95')\nabline(h = 0)\nabline(h = seq(-100,-5, by=5), lty=2, col = rgb(0,0,0,.3))\nabline(h = seq(5,100, by=5), lty=2, col = rgb(0,0,0,.3))\nfor(i in 1:length(curves)){\n    cc <- as.character(teamdata[teamdata$name == names(curves)[i], ][,c('color1','color2')])\n    #points(curves[[i]]$Date, curves[[i]]$margin, col=cc[2], pch=16, cex=.5)\n    lines(curves[[i]]$Date, curves[[i]]$margin, col=cc[2], lwd=4)\n    lines(curves[[i]]$Date, curves[[i]]$margin, col=cc[1], lwd=3)\n    points(curves[[i]]$Date[nrow(curves[[i]])], curves[[i]]$margin[nrow(curves[[i]])], col=cc[2], pch=16, cex=2)\n    points(curves[[i]]$Date[nrow(curves[[i]])], curves[[i]]$margin[nrow(curves[[i]])], col=cc[1], pch=16, cex = 1.5)\n}\n\npar(mar = c(5,0,4,2)+.1)\nplot.new()\nlegend('left', legend = rep('', nrow(lgnd)), bty='n', lwd=3, col = lgnd$color2, cex = 1.25)\nlegend('left', legend = lgnd$nameRecord, \n       bty='n', lwd=2, col = lgnd$color1, cex = 1.25)\n}\n\n```\n\n::: {.panel-tabset}\n\n## 2024\n```{r}\n#| echo: false\n#| message: false\n#year <- 2024\n#sched <- getSchedule(year)\n#standings <- getStandings(year)\n#makeWNBAstandingsGraph(year, sched, standings)\n```\n\n## 2023\n```{r}\n#| echo: false\n#| message: false\nyear <- 2023\nsched <- readRDS(paste0('data/sched',year,'.rds'))\nstandings <- readRDS(paste0('data/standings',year,'.rds'))\nmakeWNBAstandingsGraph(year, sched, standings)\n```\n\n## 2022\n```{r}\n#| echo: false\n#| message: false\nyear <- 2022\nsched <- readRDS(paste0('data/sched',year,'.rds'))\nstandings <- readRDS(paste0('data/standings',year,'.rds'))\nmakeWNBAstandingsGraph(year, sched, standings)\n```\n\n## 2021\n```{r}\n#| echo: false\n#| message: false\nyear <- 2021\nsched <- readRDS(paste0('data/sched',year,'.rds'))\nstandings <- readRDS(paste0('data/standings',year,'.rds'))\nmakeWNBAstandingsGraph(year, sched, standings)\n```\n\n## 2020\n```{r}\n#| echo: false\n#| message: false\nyear <- 2020\nsched <- readRDS(paste0('data/sched',year,'.rds'))\nstandings <- readRDS(paste0('data/standings',year,'.rds'))\nmakeWNBAstandingsGraph(year, sched, standings)\n```\n\n## 2019\n```{r}\n#| echo: false\n#| message: false\nyear <- 2019\nsched <- readRDS(paste0('data/sched',year,'.rds'))\nstandings <- readRDS(paste0('data/standings',year,'.rds'))\nmakeWNBAstandingsGraph(year, sched, standings)\n```\n\n## 2018\n```{r}\n#| echo: false\n#| message: false\nyear <- 2018\nsched <- readRDS(paste0('data/sched',year,'.rds'))\nstandings <- readRDS(paste0('data/standings',year,'.rds'))\nmakeWNBAstandingsGraph(year, sched, standings)\n```\n\n:::\n\n### About this site\nThis project was inspired by Greg Stoll's [MLB Division Race Charts](https://gregstoll.com/baseballdivisionraces/).\n\nAll statistics are from the amazing [Basketball Reference](https://www.basketball-reference.com/wnba/).\n\nWNBA team colors were identified by [Team Color Codes](https://teamcolorcodes.com/wnba-color-codes/).\n\nEach plot shows how many games above or below .500 every team was throughout the course of the season. As of 2022, the top 8 teams make the playoffs, hence the gap in the legend, but be warned that I didn't actually code up the tie-breaker scenarios, so ties are broken arbitrarily on this page.","srcMarkdownNoYaml":"\n\n```{r}\n#| include: false\n\ngetSchedule <- function(year){\n    require(rvest)\n    sched <- html_table(read_html(paste0('https://www.basketball-reference.com/wnba/years/',year,'_games.html')))[[1]]\n    return(sched)\n}\ngetStandings <- function(year){\n    standings <- html_table(read_html(paste0('https://www.basketball-reference.com/wnba/years/',year,'_standings.html')))[[1]]\n    return(standings)\n}\n\nmakeWNBAstandingsGraph <- function(year, sched, standings){\n    # team colors from: https://teamcolorcodes.com/wnba-color-codes/\n# can go back as far as 2018 with these teams\nteamdata <- read.csv(text = 'team,name,color1,color2\nATL,Atlanta Dream,#C8102E,#418FDE\nCHI,Chicago Sky,#418FDE,#FFCD00\nCON,Connecticut Sun,#A6192E,#041E42\nDAL,Dallas Wings,#0C2340,#C4D600\nIND,Indiana Fever,#041E42,#C8102E\nLV,Las Vegas Aces,#000000,#BA0C2F\nLA,Los Angeles Sparks,#702F8A,#FFC72C\nMIN,Minnesota Lynx,#0C2340,#236192\nNY,New York Liberty,#6ECEB2,#000000\nPHX,Phoenix Mercury,#201747,#CB6015\nSEA,Seattle Storm,#2C5234,#FBE122\nWSH,Washington Mystics,#0C2340,#C8102E')\n\nsched <- sched[,1:5]\n# date could be in two formats, with or without commas\nif(length(grep(',', sched$Date)) > 0){\n    sched$Date <- as.Date(sched$Date, format = \"%a, %b %d, %Y\")\n}else{\n    sched$Date <- as.Date(sched$Date, format = \"%a %b %d %Y\")\n}\nnames(sched) <- c('Date','Visitor','PTSvis','Home','PTShome')\n# remove playoffs\nif(any(sched$Visitor == 'Playoffs')){\n    sched <- sched[1:(which.max(sched$Visitor == 'Playoffs')-1), ]\n}\nsched$PTSvis <- as.numeric(sched$PTSvis)\nsched$PTShome <- as.numeric(sched$PTShome)\nteams <- unique(c(sched$Visitor, sched$Home))\n# check\nstopifnot(all(teams %in% teamdata$name))\nstopifnot(all(teamdata$name %in% teams))\n\n\n# QC stuff. missing values, ties\nif(any(!is.na(sched$PTShome) & (sched$PTShome==sched$PTSvis))){\n    stop('ties detected')\n}\n\ncurves <- lapply(teams, function(team){\n    away <- sched[which(sched$Visitor == team), ]\n    away$WL <- away$PTSvis > away$PTShome\n    home <- sched[which(sched$Home == team), ]\n    home$WL <- home$PTShome > home$PTSvis\n    curve <- rbind(away, home)\n    curve <- curve[order(curve$Date), ]\n    curve$margin <- cumsum(c(-1,1)[factor(curve$WL)])\n    \n    curve <- curve[, c('Date','margin')]\n    supp <- data.frame(Date = curve$Date-1,\n                       margin = c(0,curve$margin[-nrow(curve)]))\n    supp <- supp[!supp$Date %in% curve$Date, ]\n    curve <- rbind(supp,curve)\n    curve <- curve[order(curve$Date), ]\n    \n    return(curve[!is.na(curve$margin), ]) # only count played games\n})\nnames(curves) <- teams\n# make sure curves start the day before opening day and don't end before the current date\nopening <- min(do.call(rbind, curves)$Date)\ntoday <- max(do.call(rbind, curves)$Date)\nfor(i in seq_along(curves)){\n    curve <- curves[[i]]\n    if(! opening %in% curve$Date){\n        curve <- rbind(c(opening, 0), curve)\n    }\n    if(! today %in% curve$Date){\n        curve <- rbind(curve, c(today, curve$margin[nrow(curve)]))\n    }\n    curves[[i]] <- curve\n}\ncurves <- curves[order(sapply(curves, function(x){ x$margin[nrow(x)] }))]\nteamdata <- teamdata[match(names(curves), teamdata$name), ]\nteamdata$margin <- sapply(curves, function(x){ x$margin[nrow(x)] })\n# all(names(curves) == teamdata$name) # check\n\n\n# check against actual standings\nstandings$Team <- gsub('[*]','', standings$Team)\nfor(team in teams){\n    s.i <- which(standings$Team == team)\n    c.i <- which(names(curves) == team)\n    stopifnot(curves[[c.i]]$margin[nrow(curves[[c.i]])] == standings$W[s.i] - standings$L[s.i])\n}\n\n# build legend df with blank row to separate non/playoff teams\nlgnd <- teamdata[nrow(teamdata):1, ]\nlgnd <- merge(lgnd, standings, by.x = 'name', by.y = 'Team')\nlgnd <- lgnd[match(names(curves), lgnd$name), ]\nlgnd <- lgnd[nrow(lgnd):1, ]\nlgnd$nameRecord <- paste0(lgnd$name,' (',lgnd$W,'-',lgnd$L,')')\nlgnd <- rbind(lgnd[1:8,], NA, lgnd[9:nrow(lgnd), ])\n\n\nlayout(matrix(c(1,1,1,2), nrow=1))\npar(mar = c(5,4,4,0)+.1)\n\nplot(range(do.call(rbind, curves)$Date), range(sapply(curves,function(x){x$margin})), col = 'transparent',\n     xlab = '', ylab='', main = paste(year, 'WNBA Standings'), las = 1)\nrect(min(sched$Date)-9999,-9999,max(sched$Date)+9999,9999, col='grey95')\nabline(h = 0)\nabline(h = seq(-100,-5, by=5), lty=2, col = rgb(0,0,0,.3))\nabline(h = seq(5,100, by=5), lty=2, col = rgb(0,0,0,.3))\nfor(i in 1:length(curves)){\n    cc <- as.character(teamdata[teamdata$name == names(curves)[i], ][,c('color1','color2')])\n    #points(curves[[i]]$Date, curves[[i]]$margin, col=cc[2], pch=16, cex=.5)\n    lines(curves[[i]]$Date, curves[[i]]$margin, col=cc[2], lwd=4)\n    lines(curves[[i]]$Date, curves[[i]]$margin, col=cc[1], lwd=3)\n    points(curves[[i]]$Date[nrow(curves[[i]])], curves[[i]]$margin[nrow(curves[[i]])], col=cc[2], pch=16, cex=2)\n    points(curves[[i]]$Date[nrow(curves[[i]])], curves[[i]]$margin[nrow(curves[[i]])], col=cc[1], pch=16, cex = 1.5)\n}\n\npar(mar = c(5,0,4,2)+.1)\nplot.new()\nlegend('left', legend = rep('', nrow(lgnd)), bty='n', lwd=3, col = lgnd$color2, cex = 1.25)\nlegend('left', legend = lgnd$nameRecord, \n       bty='n', lwd=2, col = lgnd$color1, cex = 1.25)\n}\n\n```\n\n::: {.panel-tabset}\n\n## 2024\n```{r}\n#| echo: false\n#| message: false\n#year <- 2024\n#sched <- getSchedule(year)\n#standings <- getStandings(year)\n#makeWNBAstandingsGraph(year, sched, standings)\n```\n\n## 2023\n```{r}\n#| echo: false\n#| message: false\nyear <- 2023\nsched <- readRDS(paste0('data/sched',year,'.rds'))\nstandings <- readRDS(paste0('data/standings',year,'.rds'))\nmakeWNBAstandingsGraph(year, sched, standings)\n```\n\n## 2022\n```{r}\n#| echo: false\n#| message: false\nyear <- 2022\nsched <- readRDS(paste0('data/sched',year,'.rds'))\nstandings <- readRDS(paste0('data/standings',year,'.rds'))\nmakeWNBAstandingsGraph(year, sched, standings)\n```\n\n## 2021\n```{r}\n#| echo: false\n#| message: false\nyear <- 2021\nsched <- readRDS(paste0('data/sched',year,'.rds'))\nstandings <- readRDS(paste0('data/standings',year,'.rds'))\nmakeWNBAstandingsGraph(year, sched, standings)\n```\n\n## 2020\n```{r}\n#| echo: false\n#| message: false\nyear <- 2020\nsched <- readRDS(paste0('data/sched',year,'.rds'))\nstandings <- readRDS(paste0('data/standings',year,'.rds'))\nmakeWNBAstandingsGraph(year, sched, standings)\n```\n\n## 2019\n```{r}\n#| echo: false\n#| message: false\nyear <- 2019\nsched <- readRDS(paste0('data/sched',year,'.rds'))\nstandings <- readRDS(paste0('data/standings',year,'.rds'))\nmakeWNBAstandingsGraph(year, sched, standings)\n```\n\n## 2018\n```{r}\n#| echo: false\n#| message: false\nyear <- 2018\nsched <- readRDS(paste0('data/sched',year,'.rds'))\nstandings <- readRDS(paste0('data/standings',year,'.rds'))\nmakeWNBAstandingsGraph(year, sched, standings)\n```\n\n:::\n\n### About this site\nThis project was inspired by Greg Stoll's [MLB Division Race Charts](https://gregstoll.com/baseballdivisionraces/).\n\nAll statistics are from the amazing [Basketball Reference](https://www.basketball-reference.com/wnba/).\n\nWNBA team colors were identified by [Team Color Codes](https://teamcolorcodes.com/wnba-color-codes/).\n\nEach plot shows how many games above or below .500 every team was throughout the course of the season. As of 2022, the top 8 teams make the playoffs, hence the gap in the legend, but be warned that I didn't actually code up the tie-breaker scenarios, so ties are broken arbitrarily on this page."},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":10,"fig-height":6,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":false,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.553","theme":{"light":"flatly","dark":"darkly"},"title":"WNBA Standings"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}